name: CI - Node.js

on:
  push:
    branches:
      - 'main'
      - 'prod-**'
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'
      - 'LICENSE*'
      - 'docker/**'
  pull_request:
    branches:
      - 'main'
      - 'temp-**' # Temporary branches allowed on Upstream
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'
      - 'LICENSE*'
      - 'docker/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'main') && !contains(github.ref, 'prod-') }}

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [22]
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: 'recursive'

      - name: Check number of lockfiles
        run: |
          if [ $(find . -name 'package-lock.json' | grep -vc -e 'node_modules') -gt 0 ]
          then
            echo -e 'Error: found package-lock files in the repository.\nWe use pnpm workspaces to manage packages so all dependencies should be added via pnpm add'
            exit 1
          fi

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        id: pnpm-install
        with:
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Set Environment variables
        run: cp sample.env .env

      - name: Install node_modules
        run: pnpm install

      - name: Check formatting
        run: |
          pnpm prettier --check . || [ $? -eq 1 ] && printf "\nTip: Run 'pnpm run format' in your terminal to fix this.\n\n"

      # The two prefixed installs are for the client update which are not,
      # currently, built as workspaces.
      - name: Lint Source Files
        run: |
          echo pnpm version $(pnpm -v)
          pnpm run create:shared
          pnpm run build:curriculum
          pnpm run lint

  # DONT REMOVE THIS JOB.
  # TODO: Refactor and use re-usable workflow and shared artifacts
  build:
    name: Build
    needs: lint
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: 'recursive'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        id: pnpm-install
        with:
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Set freeCodeCamp Environment Variables
        run: |
          cp sample.env .env

      - name: Install and Build
        run: |
          pnpm install
          pnpm run build

      - name: Cache build artifacts
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: |
            client/public
            api/dist
            shared/dist
            curriculum/challenges
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  test:
    name: Test
    needs: build
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        node-version: [22]

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: 'recursive'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        id: pnpm-install
        with:
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Restore build artifacts
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: |
            client/public
            api/dist
            shared/dist
            curriculum/challenges
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Set Environment variables
        run: |
          cp sample.env .env
          cat .env

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@b0a1493307c4e9b82ed61f3858d606c5ff190c64 # v1.10.0
        with:
          mongodb-version: 8.0
          mongodb-replica-set: test-rs
          mongodb-port: 27017

      - name: Install Dependencies
        run: |
          echo pnpm version $(pnpm -v)
          pnpm install

      - name: Cache Chrome for Puppeteer
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        id: chrome-cache
        with:
          path: ~/.cache/puppeteer
          key: ${{ runner.os }}-chrome-${{ hashFiles('curriculum/package.json') }}
          restore-keys: |
            ${{ runner.os }}-chrome-

      - name: Install Chrome for Puppeteer
        if: steps.chrome-cache.outputs.cache-hit != 'true'
        run: pnpm -F=curriculum install-puppeteer

      - name: Run Tests
        run: pnpm test

  test-upcoming:
    name: Test - Upcoming Changes
    needs: build
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        node-version: [22]

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: 'recursive'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        id: pnpm-install
        with:
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Restore build artifacts
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: |
            client/public
            api/dist
            shared/dist
            curriculum/challenges
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Set Environment variables
        run: |
          cp sample.env .env
          echo 'SHOW_UPCOMING_CHANGES=true' >> .env
          cat .env

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@b0a1493307c4e9b82ed61f3858d606c5ff190c64 # v1.10.0
        with:
          mongodb-version: 8.0
          mongodb-replica-set: test-rs
          mongodb-port: 27017

      - name: Install Dependencies
        run: |
          echo pnpm version $(pnpm -v)
          pnpm install

      - name: Cache Chrome for Puppeteer
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        id: chrome-cache
        with:
          path: ~/.cache/puppeteer
          key: ${{ runner.os }}-chrome-${{ hashFiles('curriculum/package.json') }}
          restore-keys: |
            ${{ runner.os }}-chrome-

      - name: Install Chrome for Puppeteer
        if: steps.chrome-cache.outputs.cache-hit != 'true'
        run: pnpm -F=curriculum install-puppeteer

      - name: Run Tests
        run: pnpm test

  test-localization:
    name: Test - i18n
    needs: build
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        node-version: [22]
        locale: [portuguese, italian]

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: 'recursive'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        id: pnpm-install
        with:
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Set Environment variables
        run: |
          cp sample.env .env
          cat .env

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@b0a1493307c4e9b82ed61f3858d606c5ff190c64 # v1.10.0
        with:
          mongodb-version: 8.0
          mongodb-replica-set: test-rs
          mongodb-port: 27017

      - name: Install Dependencies
        env:
          CURRICULUM_LOCALE: ${{ matrix.locale }}
          CLIENT_LOCALE: ${{ matrix.locale }}
        run: |
          echo pnpm version $(pnpm -v)
          pnpm install

      # DONT REMOVE THIS STEP.
      # TODO: Refactor and use re-usable workflow and shared artifacts
      - name: Build Client in ${{ matrix.locale }}
        env:
          CURRICULUM_LOCALE: ${{ matrix.locale }}
          CLIENT_LOCALE: ${{ matrix.locale }}
        run: |
          pnpm run build

      - name: Cache Chrome for Puppeteer
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        id: chrome-cache
        with:
          path: ~/.cache/puppeteer
          key: ${{ runner.os }}-chrome-${{ hashFiles('curriculum/package.json') }}
          restore-keys: |
            ${{ runner.os }}-chrome-

      - name: Install Chrome for Puppeteer
        if: steps.chrome-cache.outputs.cache-hit != 'true'
        run: pnpm -F=curriculum install-puppeteer

      - name: Run Tests
        env:
          CURRICULUM_LOCALE: ${{ matrix.locale }}
          CLIENT_LOCALE: ${{ matrix.locale }}
        run: pnpm test
